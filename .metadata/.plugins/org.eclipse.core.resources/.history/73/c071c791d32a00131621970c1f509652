import java.util.Map;
import java.util.Map.Entry;
import java.util.TreeMap;

/**
 * @author Alexej
 * 
 */
public class Alphabet {
	private Map<Integer, String> alphabet = new TreeMap<Integer, String>();

	public Alphabet(int l) {

		String[][] a = {
				{ "À", "Á", "Â", "Ã", "Ä", "Å", "¨", "Æ", "Ç", "È", "Ê", "Ë",
						"Ì", "Í", "Î", "Ï", "Ð", "Ñ", "Ò", "Ó", "Ô", "Õ", "Ö",
						"×", "Ø", "Ù", "Ú", "Û", "Ü", "Ý", "Þ", "ß" },
				{ "À", "Á", "Â", "Ã", "Ä", "Å", "Æ", "Ç", "È", "Ê", "Ë", "Ì",
						"Í", "Î", "Ï", "Ð", "Ñ", "Ò", "Ó", "Ô", "Õ", "Ö", "×",
						"Ø", "Ù", "Ú", "Û", "Ü", "Ý", "Þ", "ß" },
				{ "À", "Á", "Â", "Ã", "Ä", "Å", "¨", "Æ", "Ç", "È", "É", "Ê",
						"Ë", "Ì", "Í", "Î", "Ï", "Ð", "Ñ", "Ò", "Ó", "Ô", "Õ",
						"Ö", "×", "Ø", "Ù", "Ú", "Û", "Ü", "Ý", "Þ", "ß" },
				{ "À", "Á", "Â", "Ã", "Ä", "Å", "Æ", "Ç", "È", "É", "Ê", "Ë",
						"Ì", "Í", "Î", "Ï", "Ð", "Ñ", "Ò", "Ó", "Ô", "Õ", "Ö",
						"×", "Ø", "Ù", "Ú", "Û", "Ü", "Ý", "Þ", "ß" }

		};


		for (int i = 1; i <= a[l].length; i++) {
			this.alphabet.put(i, a[l][i - 1]);
		}

	}

	public Map<Integer, String> getAlphabet() {
		return this.alphabet;
	}

	public Integer getByAlphabet(String value) {
		for (Entry<Integer, String> obj : this.alphabet.entrySet()) {
			if (obj.getValue().equalsIgnoreCase(value)) {
				return obj.getKey();
			}
		}
		return -1;
	}

	public String getByAlphabet(Integer key) {
		for (Entry<Integer, String> obj : this.alphabet.entrySet()) {
			if (obj.getKey().equals(key)) {
				return obj.getValue();
			}
			// System.out.println(obj.getKey());
			// System.out.println(key);
		}
		return null;
	}

	public String toString() {
		return this.alphabet.toString();
	}

	/**
	 * @param value
	 * @return
	 */
	public Integer mod(int value) {
		int c = value % alphabet.size();
		// System.out.println("alphabet.size()="+alphabet.size());
		// System.out.println("mod value"+value);
		// System.out.println("mod return"+c);
		if (c != 0) {
			return c;
		} else {
			return value;
		}
	}
}
